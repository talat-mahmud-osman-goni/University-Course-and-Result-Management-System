@model UniversityResultManagement.Models.CourseAssignTeacher
@{
    ViewBag.Title = "Course Assign to teacher";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    List<SelectListItem> getSelectDepartments = ViewBag.GetSelectDepartments;
    string message = ViewBag.Message;
    
}

@if (message == "yes")
{
    <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>

        <strong>Success!</strong> Course Assigned to Teacher Successfully.
    </div>
}
else if (message == "no")
{
    <div class="alert alert-danger">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Failed!</strong> Assign Failed.
    </div>
}
else if (message == "course already assigned")
{
    <div class="alert alert-danger">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Failed!</strong>This Course is Already Assigned by Enother Teacher.
    </div>
}

@using (Html.BeginForm())
{
    <div style="margin-left: 400px; width: 450px">
        <h1 style="font-size: 25px">Course Assign to Teacher</h1>
        <div class="form-group">
            @Html.LabelFor(m => m.DepartmentId)
            @Html.DropDownListFor(m => m.DepartmentId, new SelectList(getSelectDepartments, "Value", "Text"), "Select Department", new {@class = "form-control", @id = "departmentId"})
            @Html.ValidationMessageFor(m => m.DepartmentId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TeacherId)
            @Html.DropDownListFor(m => m.TeacherId, new SelectList(new List<object> {}, "Value", "Text"), new {@class = "form-control", @id = "teacherId"})
            @Html.ValidationMessageFor(m => m.TeacherId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CreditTaken)
            @Html.TextBoxFor(m => m.CreditTaken, new {@class = "form-control", @id = "creditTaken", @placeholder = "Credit to be Taken", @disabled = "disabled"})
            @Html.ValidationMessageFor(m => m.CreditTaken)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.RemainingCredit)
            @Html.TextBoxFor(m => m.RemainingCredit, new {@class = "form-control", @id = "remainingCredit", @placeholder = "Remaining Credit", @disabled = "disabled"})
            @Html.ValidationMessageFor(m => m.RemainingCredit)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CourseId)
            @Html.DropDownListFor(m => m.CourseId, new SelectList(new List<object> {}, "Value", "Text"), new {@class = "form-control", @Id = "courseId"})
            @Html.ValidationMessageFor(m => m.CourseId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new {@class = "form-control", @id = "name", @placeholder = "Course Name", @disabled = "disabled"})
            @Html.ValidationMessageFor(m => m.Name)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Credit)
            @Html.TextBoxFor(m => m.Credit, new {@class = "form-control", @id = "credit", @placeholder = "Course Credit", @disabled = "disabled"})
            @Html.ValidationMessageFor(m => m.Credit)
        </div>
        <div class="form-group">
            <button class="btn btn-primary" onclick="return CheckNegativeCredit()" id="assign" value="assign" type="submit">Assign</button>
        </div>
    </div>
}
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
        $(Document).ready(function() {
            $("#departmentId").change(function() {
                var deptId = $("#departmentId").val();
                $("#teacherId").empty();
                $("#creditTaken").val('');
                $("#remainingCredit").val('');
                $("#courseId").empty();
                $("#name").val('');
                $("#credit").val('');
                var json = { departmentId: deptId };

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTeacherbyDepartmentId", "Course")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#teacherId").append('<option value=' + "" + '>' + "Select Teacher" + '</option>');
                        $.each(data, function(key, value) {
                            $("#teacherId").append('<option value=' + value.Id + '>' + value.Name + '</option>');
                        });
                    }
                });
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCoursebyDepartmentId", "Course")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#courseId").append('<option value=' + "" + '>' + "Select Course" + '</option>');
                        $.each(data, function(key, value) {
                            $("#courseId").append('<option value=' + value.Id + '>' + value.Code + '</option>');
                        });
                    }
                });
            });
        });
        $(Document).ready(function() {
            $("#teacherId").change(function() {
                var teachId = $("#teacherId").val();
                $("#creditTaken").val('');
                $("#remainingCredit").val('');
                var json = { teacherId: teachId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetTeacherbyTeacherId", "Course")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $.each(data, function(key, value) {
                            $("#creditTaken").val(value.CreditTaken);
                            $("#remainingCredit").val(value.RemainingCredit);
                        });
                    }
                });
            });
        });
        $(Document).ready(function() {
            $("#courseId").change(function() {
                var courId = $("#courseId").val();
                $("#name").val('');
                $("#credit").val('');
                var json = { courseId: courId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCoursebyCourseId", "Course")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $.each(data, function(key, value) {
                            $("#name").val(value.Name);
                            $("#credit").val(value.Credit);
                        });
                    }
                });
            });
        });
        function CheckNegativeCredit() {
            var remainCredit = $("#remainingCredit").val();
            var credit = $("#credit").val();
            if (remainCredit - credit < 0) {
                var check = confirm("The Selected Course has More Credit Then the Selected Teacher's Remaining Credit. Are You Sure?");
                if (check == true) {
                    return true;
                } else {
                    return false;
                }
            }
        };
    </script>
}
